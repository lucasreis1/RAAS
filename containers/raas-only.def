Bootstrap: docker
From: debian

%labels
  Author lucasreis
  Version 1.0

%post -c /bin/bash
  export DEBIAN_FRONTEND=noninteractive
  # required base packages to compile our libs
  apt-get -y update && \
  apt-get -y install wget gnupg2 fakeroot &&\
  wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null &&\
  echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list && \
  apt-get update && \
  apt-get install -y python3 python3-dev python3-pip python3-venv build-essential time lld cmake git ninja-build libjpeg-dev libpng-dev libgl1 libglib2.0-0 intel-oneapi-mkl-devel && \
  apt-get clean 

  # clone LLVM fork
  [ ! -d /opt/llvm-project ] && git clone https://github.com/lucasreis1/llvm-project/ -b pr/improve-symbol-mapping /opt/llvm-project
  cd  /opt/llvm-project && \
  [ ! -d build ] && mkdir build 
  cmake -S llvm -B build -G Ninja \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo \
      -DLLVM_ENABLE_PROJECTS="llvm;clang;lld;openmp" \
      -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
      -DLLVM_TARGETS_TO_BUILD="X86" \
      -DLLVM_ENABLE_LLD=ON \
      -DLLVM_ENABLE_ASSERTIONS=ON \
      -DLLVM_INCLUDE_EXAMPLES=OFF &&  \
  cmake --build build && \
  cmake --install build && cd ~ && rm -rf /opt/llvm-project

  python3 -m venv /opt/venv && source /opt/venv/bin/activate 
  [ ! -d /opt/RAAS  ] && git clone --recurse-submodules https://github.com/lucasreis1/RAAS /opt/RAAS 
  cd /opt/RAAS && \
  [ -d build ] && rm -r build
  mkdir build && CC=clang CXX=clang++ cmake -B build -G Ninja -DPython_FIND_VIRTUALENV=ONLY && \
  cmake --build build  && \
  cmake --install build

  [ ! -d /tmp/fastapprox ] && git clone https://github.com/romeric/fastapprox /tmp/fastapprox 
    cd /tmp/fastapprox/fastapprox/src && \
    cp fastonebigheader.h fastapprox.c && \
    sed -i 's/^static inline//' fastapprox.c && \
    clang -Wall -fPIC -O3 -c fastapprox.c && \
    clang -shared -Wl,-soname,libfastapprox.so -o libfastapprox.so fastapprox.o && \
    cp libfastapprox.so /usr/local/lib && \
    chmod 0755 /usr/local/lib/libfastapprox.so

%environment
  #source /opt/venv/bin/activate
  #export LD_LIBRARY_PATH=/opt/pytorch/build/lib:$LD_LIBRARY_PATH
